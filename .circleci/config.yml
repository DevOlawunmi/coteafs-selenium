docker: &docker_java
  - image: circleci/openjdk:8-jdk
version: 2
jobs:
  code_checkout:
    docker: *docker_java
    working_directory: ~/repo
    steps:
      - checkout
      - save_cache:
          key: repo-{{ checksum "pom.xml" }}
          paths:
            - ~/repo
  resolve_dependencies:
    docker: *docker_java
    working_directory: ~/repo
    steps:
      - restore_cache:
          keys:
            - repo-{{ checksum "pom.xml" }}
      - run:
          name: Resolve Dependencies
          command: mvn dependency:resolve
      - save_cache:
          key: repo-dependencies-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2
  build:
    docker: *docker_java
    working_directory: ~/repo
    steps:
      - restore_cache:
          keys:
            - repo-{{ checksum "pom.xml" }}
            - repo-dependencies-{{ checksum "pom.xml" }}
      - run:
          name: Build project
          command: mvn clean install -DskipTests=true
      - save_cache:
          key: repo-{{ checksum "pom.xml" }}
          paths:
            - ~/repo
  test:
    docker: *docker_java
    working_directory: ~/repo
    steps:
      - restore_cache:
          keys:
            - repo-{{ checksum "pom.xml" }}
            - repo-dependencies-{{ checksum "pom.xml" }}
      - run:
          name: Run Tests with Sonar Coverage
          command: mvn org.jacoco:jacoco-maven-plugin:prepare-agent install -Pcoverage-per-test
      - save_cache:
          key: repo-{{ checksum "pom.xml" }}
          paths:
            - ~/repo
  code_analysis:
    docker: *docker_java
    working_directory: ~/repo
    steps:
      - restore_cache:
          keys:
            - repo-{{ checksum "pom.xml" }}
            - repo-dependencies-{{ checksum "pom.xml" }}
      - run:
          name: Update Sonar Analysis
          command: mvn sonar:sonar \
                      -Dsonar.host.url=${env.SONAR_HOST} \
                      -Dsonar.organization=${env.SONAR_ORG} \
                      -Dsonar.login=${env.SONAR_KEY} \
                      -Dsonar.pullrequest.base=master \
                      -Dsonar.pullrequest.branch=issue-7 \
                      -Dsonar.pullrequest.key=5 \
                      -Dsonar.pullrequest.provider=GitHub \
                      -Dsonar.pullrequest.github.repository=WasiqB/coteafs-selenium

filters: &all_branches
  branches:
    only:
      - develop
      - master
      - release
      - /issue-.*/

workflows:
  version: 2
  normal_flow:
    jobs:
      - code_checkout:
          filters: *all_branches
      - resolve_dependencies:
          filters: *all_branches
          requires:
            - code_checkout
      - build:
          filters: *all_branches
          requires:
            - resolve_dependencies
      - test:
          requires:
            - build
          filters: *all_branches
      - code_analysis:
          requires:
            - test
          filters: *all_branches
